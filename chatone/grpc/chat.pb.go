// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//聊天消息
type NewChatMsg struct {
	//消息类型
	MsgType int32 `protobuf:"varint,1,opt,name=msgType,proto3" json:"msgType,omitempty"`
	//接受者
	ToUserName int32 `protobuf:"varint,2,opt,name=toUserName,proto3" json:"toUserName,omitempty"`
	//客户端生成的MsgId
	ClientMsgId int32 `protobuf:"varint,3,opt,name=clientMsgId,proto3" json:"clientMsgId,omitempty"`
	//客户端生成的Seq
	ClientSeq int32 `protobuf:"varint,4,opt,name=clientSeq,proto3" json:"clientSeq,omitempty"`
	//客户端生成消息时间
	CreateTime int32 `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	//消息内容,复杂消息,可使用XML格式化(红包、链接、个人名片、地理位置)
	Content string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	//消息来源
	MsgSource string `protobuf:"bytes,7,opt,name=msgSource,proto3" json:"msgSource,omitempty"`
	//发送消息的设备(可用于追溯)
	DeviceId             string   `protobuf:"bytes,8,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	OsType               string   `protobuf:"bytes,9,opt,name=osType,proto3" json:"osType,omitempty"`
	Platform             int32    `protobuf:"varint,10,opt,name=platform,proto3" json:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewChatMsg) Reset()         { *m = NewChatMsg{} }
func (m *NewChatMsg) String() string { return proto.CompactTextString(m) }
func (*NewChatMsg) ProtoMessage()    {}
func (*NewChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *NewChatMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewChatMsg.Unmarshal(m, b)
}
func (m *NewChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewChatMsg.Marshal(b, m, deterministic)
}
func (m *NewChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewChatMsg.Merge(m, src)
}
func (m *NewChatMsg) XXX_Size() int {
	return xxx_messageInfo_NewChatMsg.Size(m)
}
func (m *NewChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_NewChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_NewChatMsg proto.InternalMessageInfo

func (m *NewChatMsg) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *NewChatMsg) GetToUserName() int32 {
	if m != nil {
		return m.ToUserName
	}
	return 0
}

func (m *NewChatMsg) GetClientMsgId() int32 {
	if m != nil {
		return m.ClientMsgId
	}
	return 0
}

func (m *NewChatMsg) GetClientSeq() int32 {
	if m != nil {
		return m.ClientSeq
	}
	return 0
}

func (m *NewChatMsg) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *NewChatMsg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *NewChatMsg) GetMsgSource() string {
	if m != nil {
		return m.MsgSource
	}
	return ""
}

func (m *NewChatMsg) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *NewChatMsg) GetOsType() string {
	if m != nil {
		return m.OsType
	}
	return ""
}

func (m *NewChatMsg) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

//返回给发起者
type NewChatMsgAck struct {
	Ret    int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	//原样送回客户端,这样客户端知道是针对哪条消息的ACK
	ClientMsgId int64 `protobuf:"varint,3,opt,name=clientMsgId,proto3" json:"clientMsgId,omitempty"`
	ClientSeq   int32 `protobuf:"varint,4,opt,name=clientSeq,proto3" json:"clientSeq,omitempty"`
	CreateTime  int32 `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	//服务器接受时间
	ServerTime int64 `protobuf:"varint,6,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	//服务端生成的MsgId
	ServerMsgId int64 `protobuf:"varint,7,opt,name=serverMsgId,proto3" json:"serverMsgId,omitempty"`
	//服务端生成的MsgSeq
	ServerMsgSeq         int64    `protobuf:"varint,8,opt,name=serverMsgSeq,proto3" json:"serverMsgSeq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewChatMsgAck) Reset()         { *m = NewChatMsgAck{} }
func (m *NewChatMsgAck) String() string { return proto.CompactTextString(m) }
func (*NewChatMsgAck) ProtoMessage()    {}
func (*NewChatMsgAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *NewChatMsgAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewChatMsgAck.Unmarshal(m, b)
}
func (m *NewChatMsgAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewChatMsgAck.Marshal(b, m, deterministic)
}
func (m *NewChatMsgAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewChatMsgAck.Merge(m, src)
}
func (m *NewChatMsgAck) XXX_Size() int {
	return xxx_messageInfo_NewChatMsgAck.Size(m)
}
func (m *NewChatMsgAck) XXX_DiscardUnknown() {
	xxx_messageInfo_NewChatMsgAck.DiscardUnknown(m)
}

var xxx_messageInfo_NewChatMsgAck proto.InternalMessageInfo

func (m *NewChatMsgAck) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *NewChatMsgAck) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *NewChatMsgAck) GetClientMsgId() int64 {
	if m != nil {
		return m.ClientMsgId
	}
	return 0
}

func (m *NewChatMsgAck) GetClientSeq() int32 {
	if m != nil {
		return m.ClientSeq
	}
	return 0
}

func (m *NewChatMsgAck) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *NewChatMsgAck) GetServerTime() int64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func (m *NewChatMsgAck) GetServerMsgId() int64 {
	if m != nil {
		return m.ServerMsgId
	}
	return 0
}

func (m *NewChatMsgAck) GetServerMsgSeq() int64 {
	if m != nil {
		return m.ServerMsgSeq
	}
	return 0
}

//发送APP(小程序、从其他APP分享过来的APP链接)
type NewAppMsg struct {
	FromUserName         string   `protobuf:"bytes,1,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"`
	AppId                string   `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	SdkVersion           int64    `protobuf:"varint,3,opt,name=sdkVersion,proto3" json:"sdkVersion,omitempty"`
	ToUserName           string   `protobuf:"bytes,4,opt,name=toUserName,proto3" json:"toUserName,omitempty"`
	Type                 int64    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Content              string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime           int64    `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ClientMsgId          string   `protobuf:"bytes,8,opt,name=clientMsgId,proto3" json:"clientMsgId,omitempty"`
	Thumb                string   `protobuf:"bytes,9,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Source               int64    `protobuf:"varint,10,opt,name=source,proto3" json:"source,omitempty"`
	RemindId             int64    `protobuf:"varint,11,opt,name=remindId,proto3" json:"remindId,omitempty"`
	MsgSource            string   `protobuf:"bytes,12,opt,name=msgSource,proto3" json:"msgSource,omitempty"`
	ShareUrlOriginal     string   `protobuf:"bytes,13,opt,name=shareUrlOriginal,proto3" json:"shareUrlOriginal,omitempty"`
	ShareUrlOpen         string   `protobuf:"bytes,14,opt,name=shareUrlOpen,proto3" json:"shareUrlOpen,omitempty"`
	JsAppId              string   `protobuf:"bytes,15,opt,name=jsAppId,proto3" json:"jsAppId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAppMsg) Reset()         { *m = NewAppMsg{} }
func (m *NewAppMsg) String() string { return proto.CompactTextString(m) }
func (*NewAppMsg) ProtoMessage()    {}
func (*NewAppMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *NewAppMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAppMsg.Unmarshal(m, b)
}
func (m *NewAppMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAppMsg.Marshal(b, m, deterministic)
}
func (m *NewAppMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAppMsg.Merge(m, src)
}
func (m *NewAppMsg) XXX_Size() int {
	return xxx_messageInfo_NewAppMsg.Size(m)
}
func (m *NewAppMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAppMsg.DiscardUnknown(m)
}

var xxx_messageInfo_NewAppMsg proto.InternalMessageInfo

func (m *NewAppMsg) GetFromUserName() string {
	if m != nil {
		return m.FromUserName
	}
	return ""
}

func (m *NewAppMsg) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *NewAppMsg) GetSdkVersion() int64 {
	if m != nil {
		return m.SdkVersion
	}
	return 0
}

func (m *NewAppMsg) GetToUserName() string {
	if m != nil {
		return m.ToUserName
	}
	return ""
}

func (m *NewAppMsg) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *NewAppMsg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *NewAppMsg) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *NewAppMsg) GetClientMsgId() string {
	if m != nil {
		return m.ClientMsgId
	}
	return ""
}

func (m *NewAppMsg) GetThumb() string {
	if m != nil {
		return m.Thumb
	}
	return ""
}

func (m *NewAppMsg) GetSource() int64 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *NewAppMsg) GetRemindId() int64 {
	if m != nil {
		return m.RemindId
	}
	return 0
}

func (m *NewAppMsg) GetMsgSource() string {
	if m != nil {
		return m.MsgSource
	}
	return ""
}

func (m *NewAppMsg) GetShareUrlOriginal() string {
	if m != nil {
		return m.ShareUrlOriginal
	}
	return ""
}

func (m *NewAppMsg) GetShareUrlOpen() string {
	if m != nil {
		return m.ShareUrlOpen
	}
	return ""
}

func (m *NewAppMsg) GetJsAppId() string {
	if m != nil {
		return m.JsAppId
	}
	return ""
}

//返回给发起者
type NewAppMsgAck struct {
	Ret    int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	AppId  string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
	//原样送回客户端,这样客户端知道是针对哪条消息的ACK
	ClientMsgId int64 `protobuf:"varint,4,opt,name=clientMsgId,proto3" json:"clientMsgId,omitempty"`
	ClientSeq   int32 `protobuf:"varint,5,opt,name=clientSeq,proto3" json:"clientSeq,omitempty"`
	CreateTime  int32 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	//服务器接受时间
	ServerTime int64 `protobuf:"varint,7,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	//服务端生成的MsgId
	ServerMsgId int64 `protobuf:"varint,8,opt,name=serverMsgId,proto3" json:"serverMsgId,omitempty"`
	//服务端生成的MsgSeq
	ServerMsgSeq         int64    `protobuf:"varint,9,opt,name=serverMsgSeq,proto3" json:"serverMsgSeq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAppMsgAck) Reset()         { *m = NewAppMsgAck{} }
func (m *NewAppMsgAck) String() string { return proto.CompactTextString(m) }
func (*NewAppMsgAck) ProtoMessage()    {}
func (*NewAppMsgAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *NewAppMsgAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAppMsgAck.Unmarshal(m, b)
}
func (m *NewAppMsgAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAppMsgAck.Marshal(b, m, deterministic)
}
func (m *NewAppMsgAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAppMsgAck.Merge(m, src)
}
func (m *NewAppMsgAck) XXX_Size() int {
	return xxx_messageInfo_NewAppMsgAck.Size(m)
}
func (m *NewAppMsgAck) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAppMsgAck.DiscardUnknown(m)
}

var xxx_messageInfo_NewAppMsgAck proto.InternalMessageInfo

func (m *NewAppMsgAck) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *NewAppMsgAck) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *NewAppMsgAck) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *NewAppMsgAck) GetClientMsgId() int64 {
	if m != nil {
		return m.ClientMsgId
	}
	return 0
}

func (m *NewAppMsgAck) GetClientSeq() int32 {
	if m != nil {
		return m.ClientSeq
	}
	return 0
}

func (m *NewAppMsgAck) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *NewAppMsgAck) GetServerTime() int64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func (m *NewAppMsgAck) GetServerMsgId() int64 {
	if m != nil {
		return m.ServerMsgId
	}
	return 0
}

func (m *NewAppMsgAck) GetServerMsgSeq() int64 {
	if m != nil {
		return m.ServerMsgSeq
	}
	return 0
}

//拉取消息
type SyncMsgReq struct {
	ServerMsgSeq         int64    `protobuf:"varint,1,opt,name=serverMsgSeq,proto3" json:"serverMsgSeq,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncMsgReq) Reset()         { *m = SyncMsgReq{} }
func (m *SyncMsgReq) String() string { return proto.CompactTextString(m) }
func (*SyncMsgReq) ProtoMessage()    {}
func (*SyncMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *SyncMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsgReq.Unmarshal(m, b)
}
func (m *SyncMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsgReq.Marshal(b, m, deterministic)
}
func (m *SyncMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsgReq.Merge(m, src)
}
func (m *SyncMsgReq) XXX_Size() int {
	return xxx_messageInfo_SyncMsgReq.Size(m)
}
func (m *SyncMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsgReq proto.InternalMessageInfo

func (m *SyncMsgReq) GetServerMsgSeq() int64 {
	if m != nil {
		return m.ServerMsgSeq
	}
	return 0
}

func (m *SyncMsgReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SyncMsgRep struct {
	Ret                  int32     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ErrMsg               string    `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Msg                  []*AddMsg `protobuf:"bytes,3,rep,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SyncMsgRep) Reset()         { *m = SyncMsgRep{} }
func (m *SyncMsgRep) String() string { return proto.CompactTextString(m) }
func (*SyncMsgRep) ProtoMessage()    {}
func (*SyncMsgRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{5}
}

func (m *SyncMsgRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsgRep.Unmarshal(m, b)
}
func (m *SyncMsgRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsgRep.Marshal(b, m, deterministic)
}
func (m *SyncMsgRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsgRep.Merge(m, src)
}
func (m *SyncMsgRep) XXX_Size() int {
	return xxx_messageInfo_SyncMsgRep.Size(m)
}
func (m *SyncMsgRep) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsgRep.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsgRep proto.InternalMessageInfo

func (m *SyncMsgRep) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *SyncMsgRep) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SyncMsgRep) GetMsg() []*AddMsg {
	if m != nil {
		return m.Msg
	}
	return nil
}

//统一的消息
//推送给接受者的格式以及用户自己拉取下来的格式
type AddMsg struct {
	MsgId        int64  `protobuf:"varint,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	FromUserName string `protobuf:"bytes,2,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"`
	ToUserName   string `protobuf:"bytes,3,opt,name=toUserName,proto3" json:"toUserName,omitempty"`
	MsgType      int64  `protobuf:"varint,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	Content      string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Status       int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime   int64  `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	MsgSource    string `protobuf:"bytes,10,opt,name=msgSource,proto3" json:"msgSource,omitempty"`
	//如何快捷展示在这个会话框下面(会话列表中,该会话栏显示的快捷内容,比如接收到红包,在会话栏中可显示:[红包])
	//纯文本则直接显示纯文本
	PushContent          string   `protobuf:"bytes,11,opt,name=pushContent,proto3" json:"pushContent,omitempty"`
	ServerMsgId          int64    `protobuf:"varint,12,opt,name=serverMsgId,proto3" json:"serverMsgId,omitempty"`
	ServerMsgSeq         int64    `protobuf:"varint,13,opt,name=serverMsgSeq,proto3" json:"serverMsgSeq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddMsg) Reset()         { *m = AddMsg{} }
func (m *AddMsg) String() string { return proto.CompactTextString(m) }
func (*AddMsg) ProtoMessage()    {}
func (*AddMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{6}
}

func (m *AddMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMsg.Unmarshal(m, b)
}
func (m *AddMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMsg.Marshal(b, m, deterministic)
}
func (m *AddMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMsg.Merge(m, src)
}
func (m *AddMsg) XXX_Size() int {
	return xxx_messageInfo_AddMsg.Size(m)
}
func (m *AddMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMsg.DiscardUnknown(m)
}

var xxx_messageInfo_AddMsg proto.InternalMessageInfo

func (m *AddMsg) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *AddMsg) GetFromUserName() string {
	if m != nil {
		return m.FromUserName
	}
	return ""
}

func (m *AddMsg) GetToUserName() string {
	if m != nil {
		return m.ToUserName
	}
	return ""
}

func (m *AddMsg) GetMsgType() int64 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *AddMsg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *AddMsg) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AddMsg) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *AddMsg) GetMsgSource() string {
	if m != nil {
		return m.MsgSource
	}
	return ""
}

func (m *AddMsg) GetPushContent() string {
	if m != nil {
		return m.PushContent
	}
	return ""
}

func (m *AddMsg) GetServerMsgId() int64 {
	if m != nil {
		return m.ServerMsgId
	}
	return 0
}

func (m *AddMsg) GetServerMsgSeq() int64 {
	if m != nil {
		return m.ServerMsgSeq
	}
	return 0
}

//已读
type MsgReadReq struct {
	//一键所有已读、某会话全部已读、会话内滚动
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	//对方是谁
	UserName int64 `protobuf:"varint,2,opt,name=userName,proto3" json:"userName,omitempty"`
	//起点
	ServerSeq int64 `protobuf:"varint,3,opt,name=serverSeq,proto3" json:"serverSeq,omitempty"`
	//数量
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgReadReq) Reset()         { *m = MsgReadReq{} }
func (m *MsgReadReq) String() string { return proto.CompactTextString(m) }
func (*MsgReadReq) ProtoMessage()    {}
func (*MsgReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{7}
}

func (m *MsgReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgReadReq.Unmarshal(m, b)
}
func (m *MsgReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgReadReq.Marshal(b, m, deterministic)
}
func (m *MsgReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReadReq.Merge(m, src)
}
func (m *MsgReadReq) XXX_Size() int {
	return xxx_messageInfo_MsgReadReq.Size(m)
}
func (m *MsgReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReadReq proto.InternalMessageInfo

func (m *MsgReadReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MsgReadReq) GetUserName() int64 {
	if m != nil {
		return m.UserName
	}
	return 0
}

func (m *MsgReadReq) GetServerSeq() int64 {
	if m != nil {
		return m.ServerSeq
	}
	return 0
}

func (m *MsgReadReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type MsgReadRep struct {
	Ret                  int32    `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgReadRep) Reset()         { *m = MsgReadRep{} }
func (m *MsgReadRep) String() string { return proto.CompactTextString(m) }
func (*MsgReadRep) ProtoMessage()    {}
func (*MsgReadRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{8}
}

func (m *MsgReadRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgReadRep.Unmarshal(m, b)
}
func (m *MsgReadRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgReadRep.Marshal(b, m, deterministic)
}
func (m *MsgReadRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReadRep.Merge(m, src)
}
func (m *MsgReadRep) XXX_Size() int {
	return xxx_messageInfo_MsgReadRep.Size(m)
}
func (m *MsgReadRep) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReadRep.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReadRep proto.InternalMessageInfo

func (m *MsgReadRep) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *MsgReadRep) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

//撤回
type RevokeMsgReq struct {
	//哪条消息
	ServerMsgId int64 `protobuf:"varint,1,opt,name=serverMsgId,proto3" json:"serverMsgId,omitempty"`
	//对方是谁
	UserName             int64    `protobuf:"varint,2,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeMsgReq) Reset()         { *m = RevokeMsgReq{} }
func (m *RevokeMsgReq) String() string { return proto.CompactTextString(m) }
func (*RevokeMsgReq) ProtoMessage()    {}
func (*RevokeMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{9}
}

func (m *RevokeMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeMsgReq.Unmarshal(m, b)
}
func (m *RevokeMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeMsgReq.Marshal(b, m, deterministic)
}
func (m *RevokeMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeMsgReq.Merge(m, src)
}
func (m *RevokeMsgReq) XXX_Size() int {
	return xxx_messageInfo_RevokeMsgReq.Size(m)
}
func (m *RevokeMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeMsgReq proto.InternalMessageInfo

func (m *RevokeMsgReq) GetServerMsgId() int64 {
	if m != nil {
		return m.ServerMsgId
	}
	return 0
}

func (m *RevokeMsgReq) GetUserName() int64 {
	if m != nil {
		return m.UserName
	}
	return 0
}

type RevokeMsgRep struct {
	Ret                  int32    `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeMsgRep) Reset()         { *m = RevokeMsgRep{} }
func (m *RevokeMsgRep) String() string { return proto.CompactTextString(m) }
func (*RevokeMsgRep) ProtoMessage()    {}
func (*RevokeMsgRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{10}
}

func (m *RevokeMsgRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeMsgRep.Unmarshal(m, b)
}
func (m *RevokeMsgRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeMsgRep.Marshal(b, m, deterministic)
}
func (m *RevokeMsgRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeMsgRep.Merge(m, src)
}
func (m *RevokeMsgRep) XXX_Size() int {
	return xxx_messageInfo_RevokeMsgRep.Size(m)
}
func (m *RevokeMsgRep) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeMsgRep.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeMsgRep proto.InternalMessageInfo

func (m *RevokeMsgRep) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *RevokeMsgRep) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*NewChatMsg)(nil), "bubble.chatone.NewChatMsg")
	proto.RegisterType((*NewChatMsgAck)(nil), "bubble.chatone.NewChatMsgAck")
	proto.RegisterType((*NewAppMsg)(nil), "bubble.chatone.NewAppMsg")
	proto.RegisterType((*NewAppMsgAck)(nil), "bubble.chatone.NewAppMsgAck")
	proto.RegisterType((*SyncMsgReq)(nil), "bubble.chatone.SyncMsgReq")
	proto.RegisterType((*SyncMsgRep)(nil), "bubble.chatone.SyncMsgRep")
	proto.RegisterType((*AddMsg)(nil), "bubble.chatone.AddMsg")
	proto.RegisterType((*MsgReadReq)(nil), "bubble.chatone.MsgReadReq")
	proto.RegisterType((*MsgReadRep)(nil), "bubble.chatone.MsgReadRep")
	proto.RegisterType((*RevokeMsgReq)(nil), "bubble.chatone.RevokeMsgReq")
	proto.RegisterType((*RevokeMsgRep)(nil), "bubble.chatone.RevokeMsgRep")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 814 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0x56, 0xe2, 0xfc, 0xf3, 0x24, 0xed, 0xaf, 0xb2, 0xaa, 0xca, 0xbf, 0xa8, 0x54, 0x91, 0x4f,
	0x11, 0x87, 0x1c, 0x8a, 0x84, 0xb8, 0x86, 0x8a, 0x96, 0x48, 0xb4, 0x48, 0x49, 0xcb, 0x81, 0x13,
	0x8e, 0x3d, 0x75, 0x42, 0xe3, 0x3f, 0xdd, 0x75, 0x5a, 0xf5, 0x3d, 0x78, 0x0e, 0x5e, 0x83, 0x17,
	0xe0, 0x2d, 0x78, 0x08, 0xd0, 0xec, 0x3a, 0xf6, 0xda, 0x4e, 0x13, 0x05, 0x71, 0xf3, 0x37, 0xb3,
	0x3b, 0x3b, 0xf3, 0xcd, 0x37, 0xbb, 0x06, 0x70, 0x66, 0x76, 0x3c, 0x88, 0x58, 0x18, 0x87, 0xc6,
	0xfe, 0x74, 0x39, 0x9d, 0x2e, 0x70, 0x40, 0xa6, 0x30, 0x40, 0xeb, 0x7b, 0x15, 0xe0, 0x0a, 0x1f,
	0xcf, 0x66, 0x76, 0x7c, 0xc9, 0x3d, 0xc3, 0x84, 0xa6, 0xcf, 0xbd, 0xeb, 0xa7, 0x08, 0xcd, 0x4a,
	0xaf, 0xd2, 0xaf, 0x8f, 0x57, 0xd0, 0x38, 0x01, 0x88, 0xc3, 0x1b, 0x8e, 0xec, 0xca, 0xf6, 0xd1,
	0xac, 0x0a, 0xa7, 0x62, 0x31, 0x7a, 0xd0, 0x76, 0x16, 0x73, 0x0c, 0x28, 0xcc, 0xc8, 0x35, 0x35,
	0xb1, 0x40, 0x35, 0x19, 0xc7, 0xa0, 0x4b, 0x38, 0xc1, 0x7b, 0xb3, 0x26, 0xfc, 0x99, 0x81, 0xe2,
	0x3b, 0x0c, 0xed, 0x18, 0xaf, 0xe7, 0x3e, 0x9a, 0x75, 0x19, 0x3f, 0xb3, 0x50, 0x66, 0x4e, 0x18,
	0xc4, 0x18, 0xc4, 0x66, 0xa3, 0x57, 0xe9, 0xeb, 0xe3, 0x15, 0xa4, 0xb8, 0x3e, 0xf7, 0x26, 0xe1,
	0x92, 0x39, 0x68, 0x36, 0x85, 0x2f, 0x33, 0x18, 0x5d, 0x68, 0xb9, 0xf8, 0x30, 0x77, 0x70, 0xe4,
	0x9a, 0x2d, 0xe1, 0x4c, 0xb1, 0x71, 0x04, 0x8d, 0x90, 0x8b, 0x62, 0x75, 0xe1, 0x49, 0x10, 0xed,
	0x89, 0x16, 0x76, 0x7c, 0x1b, 0x32, 0xdf, 0x04, 0x91, 0x49, 0x8a, 0xad, 0xdf, 0x15, 0xd8, 0xcb,
	0x08, 0x1b, 0x3a, 0x77, 0xc6, 0x01, 0x68, 0x0c, 0xe3, 0x84, 0x2f, 0xfa, 0xa4, 0xb8, 0xc8, 0xd8,
	0x25, 0xf7, 0x04, 0x4f, 0xfa, 0x38, 0x41, 0xeb, 0x38, 0xd2, 0xfe, 0x25, 0x47, 0x27, 0x00, 0x1c,
	0xd9, 0x03, 0x32, 0xe1, 0x6f, 0x88, 0xf0, 0x8a, 0x85, 0xce, 0x97, 0x48, 0x9e, 0xdf, 0x94, 0xe7,
	0x2b, 0x26, 0xc3, 0x82, 0x4e, 0x0a, 0x29, 0x85, 0x96, 0x58, 0x92, 0xb3, 0x59, 0x3f, 0x34, 0xd0,
	0xaf, 0xf0, 0x71, 0x18, 0x45, 0x54, 0x93, 0x05, 0x9d, 0x5b, 0x16, 0xfa, 0xa9, 0x32, 0x2a, 0xa2,
	0xe2, 0x9c, 0xcd, 0x38, 0x84, 0xba, 0x1d, 0x45, 0x23, 0x37, 0xa1, 0x43, 0x02, 0x91, 0xad, 0x7b,
	0xf7, 0x09, 0x19, 0x9f, 0x87, 0x41, 0x42, 0x86, 0x62, 0x29, 0x28, 0xae, 0x26, 0xb6, 0xaa, 0x8a,
	0x33, 0xa0, 0x16, 0x53, 0xef, 0xea, 0x62, 0xa7, 0xf8, 0xde, 0xa0, 0x92, 0x3c, 0x77, 0xb2, 0x74,
	0x95, 0xbb, 0x42, 0x6f, 0xa4, 0x54, 0x72, 0xbd, 0x39, 0x84, 0x7a, 0x3c, 0x5b, 0xfa, 0xd3, 0x44,
	0x2c, 0x12, 0x50, 0xaf, 0xb9, 0x94, 0x1e, 0x88, 0x98, 0x09, 0x22, 0x0d, 0x31, 0xf4, 0xe7, 0x81,
	0x3b, 0x72, 0xcd, 0xb6, 0xf0, 0xa4, 0x38, 0xaf, 0xd8, 0x4e, 0x51, 0xb1, 0x2f, 0xe1, 0x80, 0xcf,
	0x6c, 0x86, 0x37, 0x6c, 0xf1, 0x91, 0xcd, 0xbd, 0x79, 0x60, 0x2f, 0xcc, 0x3d, 0xb1, 0xa8, 0x64,
	0x17, 0xfd, 0x5a, 0xd9, 0x22, 0x0c, 0xcc, 0x7d, 0xc9, 0xbe, 0x6a, 0x23, 0x4e, 0xbe, 0xf2, 0xa1,
	0xe0, 0xff, 0x3f, 0xc9, 0x49, 0x02, 0xad, 0x6f, 0x55, 0xe8, 0xa4, 0x9d, 0xdc, 0x4d, 0xca, 0x69,
	0x4b, 0x35, 0xb5, 0xa5, 0x05, 0x12, 0x6b, 0x5b, 0x04, 0x5e, 0xdf, 0x2c, 0xf0, 0xc6, 0x16, 0x81,
	0x37, 0xb7, 0x09, 0xbc, 0xb5, 0x5d, 0xe0, 0xfa, 0x1a, 0x81, 0x9f, 0x03, 0x4c, 0x9e, 0x02, 0xe7,
	0x92, 0x7b, 0x63, 0xbc, 0x2f, 0xed, 0xa8, 0x94, 0x77, 0x10, 0x1b, 0x4e, 0xb8, 0x0c, 0xe2, 0xe4,
	0x5e, 0x94, 0xc0, 0xfa, 0xa2, 0xc4, 0x89, 0x76, 0xe0, 0xb6, 0x0f, 0x9a, 0xcf, 0x3d, 0x53, 0xeb,
	0x69, 0xfd, 0xf6, 0xe9, 0xd1, 0x20, 0x7f, 0x63, 0x0f, 0x86, 0xae, 0x4b, 0x11, 0x69, 0x89, 0xf5,
	0xb3, 0x0a, 0x0d, 0x89, 0x29, 0x05, 0x5f, 0x14, 0x2d, 0xf3, 0x93, 0xa0, 0x34, 0x9d, 0xd5, 0x35,
	0xd3, 0x99, 0x9f, 0x33, 0xad, 0x34, 0x67, 0xca, 0x9b, 0x20, 0x1b, 0x9a, 0xbe, 0x09, 0xca, 0xb4,
	0xd5, 0xf3, 0xd3, 0x46, 0x53, 0x11, 0xdb, 0xf1, 0x92, 0x27, 0xb7, 0x50, 0x82, 0x0a, 0x0d, 0xd6,
	0x4b, 0x53, 0x98, 0x9b, 0x0c, 0x28, 0x4e, 0x46, 0x0f, 0xda, 0xd1, 0x92, 0xcf, 0xce, 0x92, 0x33,
	0xdb, 0x72, 0x46, 0x15, 0x53, 0x51, 0x00, 0x9d, 0xed, 0x02, 0xd8, 0x5b, 0x23, 0x80, 0x08, 0x40,
	0x34, 0xcd, 0x76, 0x49, 0x00, 0xab, 0x7b, 0x46, 0x76, 0x4e, 0xde, 0x33, 0x5d, 0x68, 0x2d, 0x55,
	0x4e, 0xb5, 0x71, 0x8a, 0xa9, 0x06, 0x19, 0x8d, 0xc2, 0xcb, 0x6b, 0x2d, 0x33, 0x64, 0x52, 0xa9,
	0xa9, 0x52, 0x79, 0xad, 0x9c, 0xb8, 0x83, 0x54, 0xac, 0x0f, 0xd0, 0x19, 0xe3, 0x43, 0x78, 0x87,
	0x89, 0x58, 0x0b, 0xf5, 0x57, 0xca, 0xf5, 0x6f, 0xc8, 0xdc, 0x7a, 0x93, 0x8b, 0xb6, 0x43, 0x1e,
	0xa7, 0xbf, 0xaa, 0x50, 0xa3, 0x27, 0xd1, 0x78, 0x0f, 0xed, 0x09, 0x06, 0xee, 0xea, 0x7f, 0xa2,
	0x5b, 0x54, 0x6f, 0xf6, 0x74, 0x76, 0x5f, 0x3c, 0xef, 0xa3, 0xbb, 0xe8, 0x1d, 0x00, 0x45, 0x4a,
	0x9e, 0x99, 0xff, 0xd7, 0x2c, 0x96, 0xae, 0xee, 0xf1, 0xb3, 0x2e, 0x0a, 0x73, 0x01, 0x7a, 0x5a,
	0x93, 0x51, 0x5a, 0xaa, 0x92, 0xd7, 0xdd, 0xe4, 0x8d, 0x8c, 0x21, 0x34, 0xa9, 0x3f, 0x6b, 0xab,
	0xca, 0xd4, 0xd2, 0x7d, 0xde, 0x17, 0x19, 0xe7, 0xd0, 0xb9, 0x40, 0xaa, 0xef, 0x26, 0x60, 0x68,
	0xbb, 0x7f, 0x1b, 0xe7, 0x6d, 0xe3, 0x73, 0xcd, 0x63, 0x91, 0x33, 0x6d, 0x88, 0x7f, 0xba, 0x57,
	0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x9c, 0x6d, 0x84, 0xe1, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	SendChatMsg(ctx context.Context, in *NewChatMsg, opts ...grpc.CallOption) (*NewChatMsgAck, error)
	SendAppMsg(ctx context.Context, in *NewAppMsg, opts ...grpc.CallOption) (*NewAppMsgAck, error)
	RevokeMsg(ctx context.Context, in *RevokeMsgReq, opts ...grpc.CallOption) (*RevokeMsgRep, error)
	ReadMsg(ctx context.Context, in *MsgReadReq, opts ...grpc.CallOption) (*MsgReadRep, error)
	GetMsgUnread(ctx context.Context, in *MsgReadReq, opts ...grpc.CallOption) (*MsgReadRep, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) SendChatMsg(ctx context.Context, in *NewChatMsg, opts ...grpc.CallOption) (*NewChatMsgAck, error) {
	out := new(NewChatMsgAck)
	err := c.cc.Invoke(ctx, "/bubble.chatone.Chat/SendChatMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) SendAppMsg(ctx context.Context, in *NewAppMsg, opts ...grpc.CallOption) (*NewAppMsgAck, error) {
	out := new(NewAppMsgAck)
	err := c.cc.Invoke(ctx, "/bubble.chatone.Chat/SendAppMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) RevokeMsg(ctx context.Context, in *RevokeMsgReq, opts ...grpc.CallOption) (*RevokeMsgRep, error) {
	out := new(RevokeMsgRep)
	err := c.cc.Invoke(ctx, "/bubble.chatone.Chat/RevokeMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) ReadMsg(ctx context.Context, in *MsgReadReq, opts ...grpc.CallOption) (*MsgReadRep, error) {
	out := new(MsgReadRep)
	err := c.cc.Invoke(ctx, "/bubble.chatone.Chat/ReadMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetMsgUnread(ctx context.Context, in *MsgReadReq, opts ...grpc.CallOption) (*MsgReadRep, error) {
	out := new(MsgReadRep)
	err := c.cc.Invoke(ctx, "/bubble.chatone.Chat/GetMsgUnread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	SendChatMsg(context.Context, *NewChatMsg) (*NewChatMsgAck, error)
	SendAppMsg(context.Context, *NewAppMsg) (*NewAppMsgAck, error)
	RevokeMsg(context.Context, *RevokeMsgReq) (*RevokeMsgRep, error)
	ReadMsg(context.Context, *MsgReadReq) (*MsgReadRep, error)
	GetMsgUnread(context.Context, *MsgReadReq) (*MsgReadRep, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) SendChatMsg(ctx context.Context, req *NewChatMsg) (*NewChatMsgAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendChatMsg not implemented")
}
func (*UnimplementedChatServer) SendAppMsg(ctx context.Context, req *NewAppMsg) (*NewAppMsgAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendAppMsg not implemented")
}
func (*UnimplementedChatServer) RevokeMsg(ctx context.Context, req *RevokeMsgReq) (*RevokeMsgRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeMsg not implemented")
}
func (*UnimplementedChatServer) ReadMsg(ctx context.Context, req *MsgReadReq) (*MsgReadRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadMsg not implemented")
}
func (*UnimplementedChatServer) GetMsgUnread(ctx context.Context, req *MsgReadReq) (*MsgReadRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMsgUnread not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_SendChatMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewChatMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendChatMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubble.chatone.Chat/SendChatMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendChatMsg(ctx, req.(*NewChatMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_SendAppMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAppMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendAppMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubble.chatone.Chat/SendAppMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendAppMsg(ctx, req.(*NewAppMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_RevokeMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).RevokeMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubble.chatone.Chat/RevokeMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).RevokeMsg(ctx, req.(*RevokeMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_ReadMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).ReadMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubble.chatone.Chat/ReadMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).ReadMsg(ctx, req.(*MsgReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetMsgUnread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetMsgUnread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubble.chatone.Chat/GetMsgUnread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetMsgUnread(ctx, req.(*MsgReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bubble.chatone.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendChatMsg",
			Handler:    _Chat_SendChatMsg_Handler,
		},
		{
			MethodName: "SendAppMsg",
			Handler:    _Chat_SendAppMsg_Handler,
		},
		{
			MethodName: "RevokeMsg",
			Handler:    _Chat_RevokeMsg_Handler,
		},
		{
			MethodName: "ReadMsg",
			Handler:    _Chat_ReadMsg_Handler,
		},
		{
			MethodName: "GetMsgUnread",
			Handler:    _Chat_GetMsgUnread_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}
